{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import libraries\n",
    "\n",
    "import random\n",
    "import math\n",
    "import scipy\n",
    "from scipy import optimize\n",
    "import matplotlib.pyplot as plt\n",
    "from statistics import mean\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Grid-Search Part"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0671645178582093\n"
     ]
    }
   ],
   "source": [
    "#Hydraulic head measurements\n",
    "\n",
    "time = 7 #days\n",
    "x = [1,11,21,31,41,51,61,71,81,91]#m\n",
    "head7 = [-0.102488214832666, -0.256410491553362, -0.213669206729949, -0.483401683067052, -0.243068241621553, -0.311217243417387, -0.0644217683867324, -0.0772257784637896, -0.0603414471556082, -0.0334897934057921]\n",
    "\n",
    "\n",
    "time = 10 #days\n",
    "x = [1,11,21,31,41,51,61,71,81,91]#m\n",
    "head10 = [0.443999406954099, 0.707356086196896, 0.303188299476753, 0.434854619375683, 0.399381989561914, 0.0671645178582093, 0.181871866404912, -0.00516329217097165, -0.171663585230874, -0.250824777480790]\n",
    "\n",
    "time = 25 #days \n",
    "x = [1,11,21,31,41,51,61,71,81,91]#m\n",
    "head25 = [-0.371461399773691, -0.311394297727547, 0.0366151360819552, 0.0611240611861598, 0.306417078570019, 0.283762317677219, 0.192870096397016, 0.0533317081309611, 0.183152310977500, 0.107895715430948]\n",
    "\n",
    "time = 50 #days\n",
    "x = [1,11,21,31,41,51,61,71,81,91]#m\n",
    "head50 = [0.782927857935940, 0.609881412988871, 0.113570122237571, -0.00568864797838272, -0.160172200979472, -0.127889705676206, -0.00387621599071414, 0.00690596442957636, -0.00207478866324770, -0.282535147150022]\n",
    "\n",
    "time = 180 #days \n",
    "x = [1,11,21,31,41,51,61,71,81,91]#m\n",
    "head180 = [-0.976539641786550, -0.577920831537149, -0.308098743266651, -0.0949955682304036, -0.00877293988316697, 0.0336866533831244, 0.167401153463919, -0.0773048945381665, 0.0780282510863342, -0.167658892045170]\n",
    "\n",
    "t = [7, 10, 25, 50, 180]\n",
    "head_obs_list = [head7, head10, head25, head50, head180]\n",
    "head_obs = np.array(head_obs_list)\n",
    "#head_obs = np.array(head_obs)\n",
    "print(head_obs[1,5])\n",
    "head_obs_array = np.concatenate([head7,head10, head25, head50, head180])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def calculate_hxt_for_one_variable(D_input, A_input, w_input, x_input, t_input):\n",
    "  fun1 = A_input * math.exp(-x_input * math.sqrt(w_input / (2*D_input)))\n",
    "  fun2 = math.sin(-x_input * math.sqrt((w_input / (2*D_input)) + ((w_input * t_input) )))\n",
    "  return fun1 * fun2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[  40.           64.59131946  104.30096374  168.42342172  271.96727592\n",
      "  439.16813004  709.16122461 1145.14148018 1849.15497932 2985.984     ]\n",
      "[0.2        0.28599383 0.40896235 0.58480355 0.83625103 1.19581317\n",
      " 1.70997595 2.44521285 3.49657893 5.        ]\n",
      "[0.8975979  1.14693065 1.3962634  1.64559615 1.8949289  2.14426165\n",
      " 2.3935944  2.64292715 2.8922599  3.14159265]\n"
     ]
    }
   ],
   "source": [
    "#ranges for parameters\n",
    "\n",
    "# I increased the step size from 4 to 10.\n",
    "\n",
    "steps= 10 #steps for the grid search method\n",
    "\n",
    "b = 10 # saturated thicknes in meter\n",
    "sy = 0.25 # specific yeld \n",
    "K_exp_min = 0\n",
    "K_exp_max = 2\n",
    "K_skalar = 8.64  #[m/d]\n",
    "K_exp_lin = np.linspace(K_exp_min, K_exp_max, steps)\n",
    "K = np.power(K_skalar, K_exp_lin)\n",
    "D = ((K * b) / sy)\n",
    "print(D)\n",
    "\n",
    "A_exp_min = -1\n",
    "A_exp_max = 1\n",
    "A_exp_lin = np.linspace(A_exp_min, A_exp_max, steps)\n",
    "A = np.power(5, A_exp_lin)\n",
    "print(A)\n",
    "\n",
    "w_min = (2 * math.pi) / 7\n",
    "w_max = (2 * math.pi) / 2\n",
    "w = np.linspace(w_min, w_max, steps)\n",
    "print(w)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[104.30096373910334, 0.5848035476425731, 2.39359440273508]\n",
      "9.946606822004389\n"
     ]
    }
   ],
   "source": [
    "#go through all combinations, take difference from the measurements and find best parameters for all combinations of x and t\n",
    "\n",
    "best_current_difference = np.inf\n",
    "\n",
    "for c,Dlin in enumerate(D):\n",
    "    for d,Alin in enumerate(A):\n",
    "         for e,wlin in enumerate(w):\n",
    "                    h_combinations = []\n",
    "                    for a,T in enumerate(t):\n",
    "                        for b,X in enumerate(x):\n",
    "                            h_combinations.append(calculate_hxt_for_one_variable(Dlin, Alin, wlin, X, T))\n",
    "                                \n",
    "                    difference_current = np.sum(np.abs(np.subtract(h_combinations, head_obs_array))) \n",
    "                    #print(difference_current)\n",
    "                    \n",
    "                    \n",
    "                    if difference_current <= best_current_difference:  \n",
    "                        best_current_combination = [Dlin, Alin, wlin,]\n",
    "                        best_current_difference = difference_current\n",
    "                        #print(best_current_combination)\n",
    "print(best_current_combination)\n",
    "print(best_current_difference)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "h_values_gridsearch = []\n",
    "for a,T in enumerate(t):\n",
    "    for b,X in enumerate(x):\n",
    "        h_values_gridsearch.append(calculate_hxt_for_one_variable(best_current_combination[0],best_current_combination[1],best_current_combination[2], X, T))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.4283173914225131, -0.15698111524239539, 0.056681795956656955, -0.020193206675666143, 0.0071051604839626374, -0.0024707632415725033, 0.0008494305756293782, -0.0002887345110162787, 9.702082331806923e-05, -3.221273196257791e-05, 0.5167947920027633, 0.07383044758280655, -0.04856445935302242, -0.016621458655869475, 0.0029774295157127427, 0.002438697354460345, 5.001801683488425e-05, -0.00027804933764740883, -5.141950605415032e-05, 2.4212866402660073e-05, -0.5217685818231907, 0.04922659216685143, 0.04827484781317167, -0.018495207430510058, -0.0007940194684799163, 0.0023800534521174867, -0.0005337877312888082, -0.00013874205490647956, 9.92028590916376e-05, -9.848465461879361e-06, 0.5245974850271258, -0.1477957165865018, 0.024639756739701767, 0.002974317421301093, -0.0046271277878848095, 0.002350059349123914, -0.0008277637234861635, 0.00020702540456003532, -2.3606322893376385e-05, -1.0529264015470067e-05, -0.4958838321268324, -0.152223148926447, -0.043442195923104915, -0.011141202572064402, -0.002340474825780195, -0.00025514519702819104, 0.00010434135317533432, 9.962152703968808e-05, 5.427499995204506e-05, 2.4548924600970934e-05]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "50"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(h_values_gridsearch)\n",
    "len(h_values_gridsearch)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fbb27e44cd0>]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_gridsearch[0:10]\n",
    "z = head7\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Simulation vs. Observation, t=7 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x,z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"lower right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fbb27f44be0>]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_gridsearch[10:20]\n",
    "z = head10\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Simulation vs. Observation, t=10 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x,z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"upper right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fbb28085700>]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_gridsearch[20:30]\n",
    "z = head25\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Simulation vs. Observation, t=25 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x,z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"upper right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fbb281745b0>]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_gridsearch[30:40]\n",
    "z = head50\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Simulation vs. Observation, t=50 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x,z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"upper right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fbb28268a90>]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_gridsearch[40:50]\n",
    "z = head180\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Simulation vs. Observation, t=180 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x,z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"lower right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Monte Carlo Part"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 137.544812    416.80099609   55.76182413  156.79106822  534.49780124\n",
      " 1107.90918703  128.00963159  334.7252927    42.03042229 2381.41187694\n",
      "  347.34063413   37.69955933  713.31069388  607.58097552  180.24990346\n",
      "  106.94300124  352.81701749 1913.17713918 2489.45506789  842.16100472\n",
      "   86.2533368    91.05913633   91.07005185   46.99015029   53.00007579\n",
      "   51.74339173   55.94194374  110.56304927 1005.07875174 1253.99824685\n",
      " 2536.42566828  292.89586159  565.87519355 2516.71612341 1469.77726153\n",
      " 2425.65345869   41.59660389  551.26898138 1377.58293136 1618.92983468\n",
      "  172.64313545 1049.01396492  314.85255437   98.67821448  116.15471373\n",
      " 1041.25869073  157.27340445  194.03070389 1693.57295471   93.63569048\n",
      "  190.81728713   69.70502438  490.66894343  322.23921586  341.46539386\n",
      " 1202.53020733  627.4014896   286.29170058   41.4558613   585.94227344\n",
      "  444.60046018  838.00316763 1626.75972569   72.92601108  133.1893614\n",
      " 1900.47831452  664.14040125 1015.03469635 2366.11074564 1133.27011599\n",
      "  195.5564484    80.44119745  139.41977554  474.42193854   91.08246371\n",
      "  908.32291595  269.99224319   79.70561913  148.68342748  237.45553452\n",
      "  826.31199772  130.78309969  282.57645928   82.39976994  140.77753827\n",
      "  131.96962335   50.48474504  206.82546525  751.35200228   72.05928157\n",
      "  561.554821   1957.8426081   138.9030957   673.43282763   93.58368417\n",
      "  239.65185144  279.22456938  217.29016556   74.48556536   38.23359559]\n",
      "[1.40511001 0.37832338 0.4961599  4.37386008 3.54701163 1.60061112\n",
      " 0.61069409 1.0395007  1.5170836  3.96708711 0.63505038 0.83128943\n",
      " 2.51481237 1.47120285 0.22974275 0.36635289 0.26020288 1.5102319\n",
      " 0.23864013 0.37868514 1.81403192 3.30230981 0.37899424 1.4473153\n",
      " 0.49960948 2.6007239  0.29557557 0.31612966 0.84798237 0.27588596\n",
      " 2.15121468 3.68514707 1.88566227 0.25682697 0.94068893 1.81127399\n",
      " 0.58507431 1.48415522 3.99492183 4.52868736 1.28956925 3.31840152\n",
      " 0.3737424  0.39793718 0.57323263 0.35428715 0.83892645 0.52297137\n",
      " 0.34540809 1.98588607 3.91282324 0.89221161 1.66353117 1.27527598\n",
      " 4.30676376 0.56194307 1.89278458 0.53008609 3.97778703 0.41224919\n",
      " 3.31445596 3.09106541 0.31258352 0.32877378 3.45371626 0.9058999\n",
      " 1.98278053 1.47717064 0.80059341 0.55507729 1.88021629 1.11768883\n",
      " 0.22517068 1.48634188 0.97082731 4.38190523 1.84760029 3.68852118\n",
      " 2.3940687  1.30519089 0.81675148 1.20806661 0.23121936 0.91539986\n",
      " 0.28735817 0.77335901 4.22913083 0.69630606 0.40692547 0.40677335\n",
      " 1.05042249 3.54420832 3.14803837 4.89959783 1.17282834 4.85837942\n",
      " 0.77513116 0.60226727 0.4870191  0.20494967]\n",
      "[2.97757582 3.08912119 2.41460393 0.90210167 2.96786283 1.40896076\n",
      " 1.80234582 1.40184942 1.75218128 1.65503863 3.07375336 2.2364369\n",
      " 2.66941141 1.16814862 2.43699424 2.59218226 2.71419291 2.51322342\n",
      " 2.73697115 2.22169766 2.92762602 2.56546695 2.69309409 2.33331538\n",
      " 2.26049094 1.11899307 1.34584928 0.99314437 1.76644831 2.82546419\n",
      " 1.26183932 0.93622596 2.403699   3.0488087  3.0725384  3.09839508\n",
      " 2.26879777 1.0376617  1.73699484 1.85565418 2.38751703 2.39996221\n",
      " 1.98587031 0.97829897 1.39761689 1.42713859 2.52530685 2.76171061\n",
      " 1.51827655 1.7689548  2.8044775  2.5833881  2.67538182 2.25182804\n",
      " 2.74416532 0.98658013 3.11412744 1.55195345 1.79344717 2.79190882\n",
      " 1.80719082 2.59785505 2.01519043 1.98638635 1.01465364 2.65847517\n",
      " 1.7813532  3.1255442  2.88033131 0.98959609 2.36410526 2.24320707\n",
      " 2.70741545 1.86622121 1.68366737 2.1478337  1.94218026 2.12837719\n",
      " 2.89951531 1.38688578 2.8624772  2.26502746 2.74893422 1.39980176\n",
      " 2.10381211 1.62996021 2.18197059 2.38279155 2.84881991 1.82632673\n",
      " 2.02852087 1.60007661 1.2098642  0.97358676 2.04723733 2.58065527\n",
      " 1.62166424 1.13619903 2.2531317  1.86627652]\n"
     ]
    }
   ],
   "source": [
    "#Define the parameters (by using random numbers)\n",
    "#np.random.seed(321)\n",
    "steps= 100\n",
    "\n",
    "K_exp_min = 0\n",
    "K_exp_max = 2\n",
    "K_skalar = 8.64  #[m/d]\n",
    "K_exp_MC = np.random.uniform(K_exp_min, K_exp_max, steps)\n",
    "K_MC = np.power(K_skalar, K_exp_MC)\n",
    "D_MC = ((K_MC * b) / sy)\n",
    "print(D_MC)\n",
    "\n",
    "A_MC = 5**np.random.uniform(-1, 1, size=steps)\n",
    "print(A_MC)\n",
    "\n",
    "w_min = (2 * math.pi) / 7\n",
    "w_max = (2 * math.pi) / 2\n",
    "w_MC = np.random.uniform(w_min, w_max, size=steps)\n",
    "print(w_MC)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-16-6139d9a7f282>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      9\u001b[0m                     \u001b[0;32mfor\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mT\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m                         \u001b[0;32mfor\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m                             \u001b[0mh_combinations\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalculate_hxt_for_one_variable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDlin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mAlin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwlin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m                     \u001b[0mdifference_current\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mabs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubtract\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mh_combinations\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhead_obs_array\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-4-847774c35b08>\u001b[0m in \u001b[0;36mcalculate_hxt_for_one_variable\u001b[0;34m(D_input, A_input, w_input, x_input, t_input)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mcalculate_hxt_for_one_variable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mD_input\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mA_input\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mw_input\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_input\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mt_input\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m   \u001b[0mfun1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mA_input\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexp\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mx_input\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mw_input\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mD_input\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m   \u001b[0mfun2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mx_input\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mw_input\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mD_input\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mw_input\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mt_input\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m   \u001b[0;32mreturn\u001b[0m \u001b[0mfun1\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mfun2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "#go through all combinations, take difference from the measurements and find best parameters for all combinations of x and t\n",
    "\n",
    "best_current_difference = np.inf\n",
    "\n",
    "for c,Dlin in enumerate(D_MC):\n",
    "    for d,Alin in enumerate(A_MC):\n",
    "         for e,wlin in enumerate(w_MC):\n",
    "                    h_combinations = []\n",
    "                    for a,T in enumerate(t):\n",
    "                        for b,X in enumerate(x):\n",
    "                            h_combinations.append(calculate_hxt_for_one_variable(Dlin, Alin, wlin, X, T))\n",
    "                                \n",
    "                    difference_current = np.sum(np.abs(np.subtract(h_combinations, head_obs_array))) \n",
    "                    #print(difference_current)\n",
    "                    \n",
    "                    \n",
    "                    if difference_current <= best_current_difference:  \n",
    "                        best_current_combination = [Dlin, Alin, wlin]\n",
    "                        best_current_difference = difference_current\n",
    "                        #print(best_current_combination)\n",
    "print(best_current_combination)\n",
    "print(best_current_difference)\n",
    "                       \n",
    "     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "h_values_MC = []\n",
    "for a,T in enumerate(t):\n",
    "    for b,X in enumerate(x):\n",
    "        h_values_MC.append(calculate_hxt_for_one_variable(best_current_combination[0],best_current_combination[1],best_current_combination[2], X, T))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.5238580418777167, -0.30689998837207955, -0.09631942096076666, 0.1854542990158936, -0.04258272382258455, -0.06497010253019202, 0.04984680766295231, 0.006439051434260556, -0.025820064787139687, 0.009118783678133525, 0.5696828128681874, 0.38489840979083956, 0.26004716430295227, 0.17569164779525226, 0.11869791215338456, 0.08019143697539895, 0.05417586385700293, 0.03659962274794371, 0.024725225905345597, 0.016703089330289706, -0.5964211304852789, 0.20667981955912532, 0.1083484108945386, -0.18086492167482104, 0.09444838482594348, 0.00755461415161405, -0.04923807081159571, 0.035753440594069576, -0.0059395818859062826, -0.011631707109907482, 0.5812263879988846, 0.3649545441634909, 0.11341667238025593, -0.049106379940968524, -0.10295250282881627, -0.08455536027004083, -0.04078865299193452, -0.0037085215870409517, 0.014810603584637103, 0.01709396661115642, -0.36933519200968656, -0.3462018921588237, -0.26938128406812367, -0.18268907479554683, -0.10806504363139824, -0.05324054413263712, -0.017965657105513705, 0.0016141553304735929, 0.010265558098634464, 0.012260685650318896]\n"
     ]
    }
   ],
   "source": [
    "print(h_values_MC)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1373036f070>]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_MC[0:10]\n",
    "z = head7\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Monte Carlo: Simulation vs. Observation, t=7 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"lower right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x137303ca2b0>]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_MC[10:20]\n",
    "z = head10\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Monte Carlo: Simulation vs. Observation, t=10 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"upper right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x13730422670>]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_MC[20:30]\n",
    "z = head25\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Monte Carlo: Simulation vs. Observation, t=25 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"upper right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1373048b250>]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_MC[30:40]\n",
    "z = head50\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Monte Carlo: Simulation vs. Observation, t=50 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"upper right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1373033f400>]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_MC[40:50]\n",
    "z = head180\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Monte Carlo: Simulation vs. Observation, t=180 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"upper right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\nReference:\\nhttps://docs.scipy.org/doc/scipy/reference/tutorial/optimize.html\\nhttps://docs.scipy.org/doc/scipy/reference/optimize.minimize-neldermead.html#optimize-minimize-neldermead\\n'"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# I am still trying to write a loss function that we have to minimize.\n",
    "# We will use this function as the first parameter in scipy library. For details, please see the references.\n",
    "\n",
    "'''\n",
    "Reference:\n",
    "https://docs.scipy.org/doc/scipy/reference/tutorial/optimize.html\n",
    "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-neldermead.html#optimize-minimize-neldermead\n",
    "'''\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Define an objective function that we want to minimize\n",
    "\n",
    "#initial_parameter = [43.12779010783523, 1.052992921683777, 0.25993138281437717, 1.7942379459878974]\n",
    "initial_parameter_Grid_Search = [104.30096373910334, 0.5848035476425731, 2.39359440273508]\n",
    "initial_parameter_Monte_Carlo = [827.0353104672147, 0.6229527504026983, 2.5268491392771577]\n",
    "\n",
    "def objective_function(parameters):\n",
    "  D = parameters[0]\n",
    "  A = parameters[1]\n",
    "  omega = parameters[2]\n",
    "\n",
    "  absolute = 0\n",
    "\n",
    "  for a,T in enumerate(t):\n",
    "    for b,X in enumerate(x):\n",
    "      head = calculate_hxt_for_one_variable(D, A, omega, X, T)\n",
    "      \n",
    "      absolute += np.abs(head_obs[a,b] - head)\n",
    "\n",
    "  return absolute"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1043.7801374135865\n",
      "0.6428516758057105\n",
      "2.5214051199942924\n"
     ]
    }
   ],
   "source": [
    "error_Grid_Search = scipy.optimize.minimize(objective_function, initial_parameter_Monte_Carlo, method = 'Nelder-Mead')\n",
    "\n",
    "Best_D_NM = error_Grid_Search.x[0]\n",
    "Best_A_NM = error_Grid_Search.x[1]\n",
    "Best_Omega_NM = error_Grid_Search.x[2]\n",
    "\n",
    "#print(error)\n",
    "\n",
    "print(Best_D_NM)\n",
    "print(Best_A_NM)\n",
    "print(Best_Omega_NM)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8.302344319082811\n"
     ]
    }
   ],
   "source": [
    "h_combinations = []\n",
    "for a,T in enumerate(t):\n",
    "  for b,X in enumerate(x):\n",
    "    h_combinations.append(calculate_hxt_for_one_variable(Best_D_NM, Best_A_NM, Best_Omega_NM, X, T))\n",
    "                                \n",
    "difference_current = np.sum(np.abs(np.subtract(h_combinations, head_obs_array)))\n",
    "print(difference_current)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "h_values_NM = []\n",
    "for a,T in enumerate(t):\n",
    "  for b,X in enumerate(x):\n",
    "     h_values_NM.append(calculate_hxt_for_one_variable(Best_D_NM ,Best_A_NM, Best_Omega_NM, X, T))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.541555777498856, -0.3461349329548723, -0.08055724794555195, 0.21688346826601707, -0.07866183548741475, -0.06512227735300893, 0.07494539109676082, -0.008575363623299196, -0.03270079300123414, 0.022201076197859666, 0.5914701020361346, 0.4240526074018854, 0.30318829810281955, 0.21619185441482794, 0.15375244778079938, 0.10906260194690968, 0.07716316650634188, 0.05445378110258808, 0.038329004927115516, 0.026909178587779855, -0.6186226363274547, 0.2582754285520714, 0.06942609303276188, -0.19321151004692516, 0.1443622266481493, -0.03733039235575128, -0.037455868527738134, 0.05333170779334094, -0.030719399205725844, 0.0018467058624081255, 0.6041762477172425, 0.3661129593871411, 0.05297215783109161, -0.13141510390640004, -0.15367398032277796, -0.08320945101066306, -0.003876183582392866, 0.03777158373184831, 0.03850561501916684, 0.018432546534482914, -0.39392584418179827, -0.41983037076214513, -0.296369282214655, -0.13847748629151418, -0.01469709371750738, 0.05184847018063503, 0.06821338384388112, 0.05421990477498819, 0.02962246564961318, 0.007724118390723832]\n"
     ]
    }
   ],
   "source": [
    "print(h_values_NM)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x13731506670>]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_NM[0:10]\n",
    "z = head10\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Nelder-Mead: Simulation vs. Observation, t=7 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"lower right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x13731565760>]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_NM[10:20]\n",
    "z = head10\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Nelder-Mead: Simulation vs. Observation, t=10 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"lower right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x137315c6910>]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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+OGHOcNTp05l5MiRPkaUW0wJX0TqiMgnIrLIe66dz3y1ROQtEVkgIvNF5IRY1lskdsLWmFKhRw/3KGtK0u1B3oTfu3dvhg4dGs+wYhJrCX8o8JmqHgl85g1H8xTwH1VtBbQH5se43oLt2eNuXG7198akpNGjR9O2bVvatm3LmDFjAJegBwwYQHp6On379mW711Pn0KFDadOmDenp6dx+++0ArF27lvPPP58uXbrQpUsXvv76a+DA7pGPO+445s6dm7PeHj16MGvWLGbOnEnXrl3p2LEjXbt2ZeHChezevZv777+f119/nQ4dOvD666/nugHL0qVL6dmzJ+np6fTs2ZNlXidyAwcO5MYbb6Rr1660aNGCt956C4BVq1bRrVs3OnToQNu2bZk+fXrsG05VS/wAFgINvdcNgYVR5qkJLMa7qrc4j2OOOUZLJBRSBdXJk0v2fmNMVPPmzSvyvN27u4frDH//cKwyMzO1bdu2+scff+jWrVu1TZs2+v333yugX331laqqXnHFFfr444/r+vXr9aijjtLs7GxVVd24caOqql5yySU6ffp0VVVdunSptmrVSlVVH3jgAe3UqZNu375dVVVHjx6t999/v6qqrly5Uo888khVVd28ebPu2bNHVVU/+eQTPe+881RV9cUXX9Trr78+J9bI4V69eumECRNUVfX555/XPn36qKrqgAEDtG/fvrpv3z6dO3euHn744aqqOmrUKH3ooYdUVXXv3r26ZcuWA7ZFtO8DyNR8cmqsVyQ1UNVV3h/HKhGpH2WeFsBa4EURaQ/MAm5S1W3RFigig4HBAE1L2que3fTEmJT11Vdf8Ze//CWnX5vzzjuP6dOnc9hhh3HiiScCcNlllzF27FhuvvlmKleuzFVXXcXZZ5+dc5OSTz/9lHnz5uUsc8uWLTmdoUV2j3zhhRdy2mmn8eCDD/LGG29wwQUXAK5TtQEDBrBo0SJEhD179hQa94wZM5gyZQoA/fv3584778yZdu6551KuXDnatGmTc/OWLl26MGjQIPbs2cO5555Lhw4dYtlsQBGqdETkUxH5McqjTxHXUQHoBDyrqh2BbeRf9YOqjlPVzqra+ZBDDiniKiJMngzXXeden322r7dUMybIMjLco3t39wgPx0rz6f8rWnfHFSpUYObMmZx//vm8++67nHHGGQBkZ2czY8YMZs+ezezZ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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_NM[20:30]\n",
    "z = head25\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Nelder-Mead: Simulation vs. Observation, t=25 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"lower right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x13731623b80>]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_NM[30:40]\n",
    "z = head50\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Nelder-Mead: Simulation vs. Observation, t=50 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"lower right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1373168b340>]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# initialize x and y coordinates\n",
    "y = h_values_NM[40:50]\n",
    "z = head180\n",
    "x = [1,11,21,31,41,51,61,71,81,91]\n",
    "  \n",
    "# set the title of a plot\n",
    "plt.title(\"Nelder-Mead: Simulation vs. Observation, t=180 days\")\n",
    "  \n",
    "# plot scatter plot with x and y data\n",
    "plt.scatter(x, y,color='r',label=\"calibration\")\n",
    "plt.scatter(x, z,color='b',marker='+',label=\"observations\")\n",
    "\n",
    "plt.legend(loc=\"lower right\")\n",
    "\n",
    "# plot with x and y data\n",
    "plt.plot(x, y, color='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-4-7449679e7059>, line 11)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-4-7449679e7059>\"\u001b[1;36m, line \u001b[1;32m11\u001b[0m\n\u001b[1;33m    calculate_hxt_for_one variable(D, A, w, d, t)\u001b[0m\n\u001b[1;37m                          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "times = [7, 10, 25, 50, 180]\n",
    "distances = [1, 11, 21, 31, 41, 51, 61, 71, 81, 91]\n",
    "        \n",
    "simulation = np.zeros(len(times), len(distances))\n",
    "\n",
    "D=1\n",
    "A=1\n",
    "w=1\n",
    "for t in times:\n",
    "    for d in distances:\n",
    "        calculate_hxt_for_one variable(D, A, w, d, t)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
